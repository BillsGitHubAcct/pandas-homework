

```python
# Dependencies
import pandas as pd
import os
import numpy as np
import io

# Write results to individual excel files prompt
write_to_excel = input("Write results to Excel files y/n -->")

# load in School Data 
csv_path = os.path.join('raw_data', 'schools_complete.csv')
schools = pd.read_csv(csv_path)

# load in Student Data
csv_path = os.path.join('raw_data', 'students_complete.csv')
students = pd.read_csv(csv_path)

# Returns unique schools limited to schools also in students)
school_data = pd.merge(schools, students, how='inner', left_on="name", 
        right_on="school", left_index=True, right_index=True)

# Returns only students attending school in schools
student_data = pd.merge(schools, students, how='inner', left_on="name", right_on="school")

unique_schools = pd.Series(school_data["name"]).unique()
total_schools = len(unique_schools)

unique_students = pd.Series(student_data["Student ID"]).unique()
total_students = len(unique_students)

# Sum Budget
total_budget = school_data["budget"].sum()

# Average Math Score
average_math_scores = student_data["math_score"].mean()

# Average Reading Score
average_reading_scores = student_data["reading_score"].mean()

# % Passing Math
passing_math = student_data.loc[student_data["math_score"] > 69].count()["Student ID"]
percent_passing_math = (passing_math/total_students) * 100

# % Passing Reading 
passing_reading = student_data.loc[student_data["reading_score"] > 69].count()["Student ID"]
percent_passing_reading = (passing_reading/total_students) * 100

# Overall Passing Rate: average of passing math and passing reading pcts
overall_passing_rate = (percent_passing_math + percent_passing_reading) / 2

# Create a new table consolidating above calculations
district_summary_display = pd.DataFrame({"Total Schools": [total_schools],
                                         "Total Students": [total_students],
                                         "Total Budget": [total_budget],
                                         "Average Math Score": [average_math_scores],
                                         "Average Reading Score": [average_reading_scores],
                                         "% Passing Math":[percent_passing_math],
                                         "% Passing Reading":[percent_passing_reading],
                                         "% Overall Passing Rate": [overall_passing_rate],
                                   })

district_summary_display["Total Budget"] = district_summary_display["Total Budget"].map("${0:,.2f}".format)
col_list = ['Total Schools', 'Total Students', 'Total Budget', 
            'Average Math Score', 'Average Reading Score','% Passing Math', 
            '% Passing Reading', '% Overall Passing Rate']

district_summary_display = district_summary_display[col_list]
  
if write_to_excel == 'y':
    writer = pd.ExcelWriter('district_summary.xlsx')
    district_summary_display.to_excel(writer,'Sheet1')

# display district summary    
district_summary_display
```

    Write results to Excel files y/n -->y
    




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Total Schools</th>
      <th>Total Students</th>
      <th>Total Budget</th>
      <th>Average Math Score</th>
      <th>Average Reading Score</th>
      <th>% Passing Math</th>
      <th>% Passing Reading</th>
      <th>% Overall Passing Rate</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>15</td>
      <td>39170</td>
      <td>$24,649,428.00</td>
      <td>78.985371</td>
      <td>81.87784</td>
      <td>74.980853</td>
      <td>85.805463</td>
      <td>80.393158</td>
    </tr>
  </tbody>
</table>
</div>




```python
# Rename columns in student_data to be more meaningful 
student_data = student_data.rename(index=str, columns={"name_x": "school name", "name_y": "student name"})

# Insert reading passing count: 1 for True (score > 69) and  0 for False (score <= 69) 
student_data = student_data.assign(rsp_count = (student_data['reading_score']>69) - 0)

# Insert math passing count: 1 for True (score > 69) and  0 for False (score <= 69) 
student_data = student_data.assign(msp_count = (student_data['math_score']>69) - 0)

# Get count of students in each school Series
school_counts = student_data["school name"].value_counts()

# Establish groupby dataframe for totaling values on school name
grouped_by_school_name = student_data.groupby(['school name'])

# School id by school Series
school_id = grouped_by_school_name["School ID"].mean()

# Budget by school Series
total_school_budget = grouped_by_school_name["budget"].mean()

# Average math score by school Series
per_student_math_score = grouped_by_school_name["math_score"].mean()

# Average reading score by school Series
per_student_reading_score = grouped_by_school_name["reading_score"].mean()

# Passing math scores by school Series
passing_math_count = grouped_by_school_name["msp_count"].sum()

# Passing reading scores by school Series
passing_reading_count = grouped_by_school_name["rsp_count"].sum()

# Set up new dataframe to contain above Series'  
schools_summary = pd.DataFrame({"Number of Students":school_counts,
                                      "Budget":total_school_budget,
                                     "Math Score":per_student_math_score,
                                     "Reading Score":per_student_reading_score,
                                     "Passing Math Count":passing_math_count,
                                     "Passing Reading Count":passing_reading_count,
                                     "School_ID":school_id})

# Insert Budget Spent Per Student column into Summary
schools_summary["Per Student Budget"] = schools_summary["Budget"] / schools_summary["Number of Students"]

# Insert % Passed Reading to Summary column into Summary
schools_summary["% Passing Math"] = (schools_summary["Passing Math Count"] / schools_summary["Number of Students"]) * 100

# Insert % Passed Reading to Summary column into Summary
schools_summary["% Passing Reading"] = (schools_summary["Passing Reading Count"] / schools_summary["Number of Students"]) * 100

# Insert # Overall Passing Rate column into Summary
schools_summary["% Overall Passing Rate"] = (schools_summary["% Passing Reading"] + schools_summary["% Passing Math"]) / 2

# Using school_id pickup needed information from schools  
#schools_summary = pd.merge(schools_summary, schools, how='inner', left_on="School_ID", right_on="School ID")
schools_summary = pd.merge(schools_summary, schools, how='inner', left_on="School_ID", right_on="School ID",
                         left_index=False, right_index=False, sort=False,
                         suffixes=('_x', '_y'), copy=True, indicator=False,
                         validate='1:m')

# Add new numeric column representing 'Type' (type#) where 1 = 'Charter' and 2 = 'District' 
schools_summary["type#"]  = ((schools_summary['type'] == 'District') + 1)

# Create display dataframe with renamed columns 
school_summary_display = schools_summary.rename(columns={
                                                'name': 'School Name',
                                                'type':'School Type',
                                                'Number of Students':'Total Students',
                                                'budget':'Total School Budget',
                                                'Math Score':'Average Math Score',
                                                'Reading Score':'Average Reading Score'
                                                })
# Select columns needed for the report
school_summary_display = school_summary_display[['School Name','School Type','Total Students','Total School Budget',
                                                 'Per Student Budget','Average Math Score','Average Reading Score',
                                                 '% Passing Math','% Passing Reading','% Overall Passing Rate']]

school_summary_display.set_index('School Name', inplace=True)

school_summary_display.index.name=''

school_summary_display["Total School Budget"] = school_summary_display["Total School Budget"].map("${0:,.2f}".format)
school_summary_display["Per Student Budget"] = school_summary_display["Per Student Budget"].map("${0:,.2f}".format)


if write_to_excel == 'y':
    writer = pd.ExcelWriter('school_summary.xlsx')
    school_summary_display.to_excel(writer,'Sheet1')

# display school summary
school_summary_display

```




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>School Type</th>
      <th>Total Students</th>
      <th>Total School Budget</th>
      <th>Per Student Budget</th>
      <th>Average Math Score</th>
      <th>Average Reading Score</th>
      <th>% Passing Math</th>
      <th>% Passing Reading</th>
      <th>% Overall Passing Rate</th>
    </tr>
    <tr>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Bailey High School</th>
      <td>District</td>
      <td>4976</td>
      <td>$3,124,928.00</td>
      <td>$628.00</td>
      <td>77.048432</td>
      <td>81.033963</td>
      <td>66.680064</td>
      <td>81.933280</td>
      <td>74.306672</td>
    </tr>
    <tr>
      <th>Cabrera High School</th>
      <td>Charter</td>
      <td>1858</td>
      <td>$1,081,356.00</td>
      <td>$582.00</td>
      <td>83.061895</td>
      <td>83.975780</td>
      <td>94.133477</td>
      <td>97.039828</td>
      <td>95.586652</td>
    </tr>
    <tr>
      <th>Figueroa High School</th>
      <td>District</td>
      <td>2949</td>
      <td>$1,884,411.00</td>
      <td>$639.00</td>
      <td>76.711767</td>
      <td>81.158020</td>
      <td>65.988471</td>
      <td>80.739234</td>
      <td>73.363852</td>
    </tr>
    <tr>
      <th>Ford High School</th>
      <td>District</td>
      <td>2739</td>
      <td>$1,763,916.00</td>
      <td>$644.00</td>
      <td>77.102592</td>
      <td>80.746258</td>
      <td>68.309602</td>
      <td>79.299014</td>
      <td>73.804308</td>
    </tr>
    <tr>
      <th>Griffin High School</th>
      <td>Charter</td>
      <td>1468</td>
      <td>$917,500.00</td>
      <td>$625.00</td>
      <td>83.351499</td>
      <td>83.816757</td>
      <td>93.392371</td>
      <td>97.138965</td>
      <td>95.265668</td>
    </tr>
    <tr>
      <th>Hernandez High School</th>
      <td>District</td>
      <td>4635</td>
      <td>$3,022,020.00</td>
      <td>$652.00</td>
      <td>77.289752</td>
      <td>80.934412</td>
      <td>66.752967</td>
      <td>80.862999</td>
      <td>73.807983</td>
    </tr>
    <tr>
      <th>Holden High School</th>
      <td>Charter</td>
      <td>427</td>
      <td>$248,087.00</td>
      <td>$581.00</td>
      <td>83.803279</td>
      <td>83.814988</td>
      <td>92.505855</td>
      <td>96.252927</td>
      <td>94.379391</td>
    </tr>
    <tr>
      <th>Huang High School</th>
      <td>District</td>
      <td>2917</td>
      <td>$1,910,635.00</td>
      <td>$655.00</td>
      <td>76.629414</td>
      <td>81.182722</td>
      <td>65.683922</td>
      <td>81.316421</td>
      <td>73.500171</td>
    </tr>
    <tr>
      <th>Johnson High School</th>
      <td>District</td>
      <td>4761</td>
      <td>$3,094,650.00</td>
      <td>$650.00</td>
      <td>77.072464</td>
      <td>80.966394</td>
      <td>66.057551</td>
      <td>81.222432</td>
      <td>73.639992</td>
    </tr>
    <tr>
      <th>Pena High School</th>
      <td>Charter</td>
      <td>962</td>
      <td>$585,858.00</td>
      <td>$609.00</td>
      <td>83.839917</td>
      <td>84.044699</td>
      <td>94.594595</td>
      <td>95.945946</td>
      <td>95.270270</td>
    </tr>
    <tr>
      <th>Rodriguez High School</th>
      <td>District</td>
      <td>3999</td>
      <td>$2,547,363.00</td>
      <td>$637.00</td>
      <td>76.842711</td>
      <td>80.744686</td>
      <td>66.366592</td>
      <td>80.220055</td>
      <td>73.293323</td>
    </tr>
    <tr>
      <th>Shelton High School</th>
      <td>Charter</td>
      <td>1761</td>
      <td>$1,056,600.00</td>
      <td>$600.00</td>
      <td>83.359455</td>
      <td>83.725724</td>
      <td>93.867121</td>
      <td>95.854628</td>
      <td>94.860875</td>
    </tr>
    <tr>
      <th>Thomas High School</th>
      <td>Charter</td>
      <td>1635</td>
      <td>$1,043,130.00</td>
      <td>$638.00</td>
      <td>83.418349</td>
      <td>83.848930</td>
      <td>93.272171</td>
      <td>97.308869</td>
      <td>95.290520</td>
    </tr>
    <tr>
      <th>Wilson High School</th>
      <td>Charter</td>
      <td>2283</td>
      <td>$1,319,574.00</td>
      <td>$578.00</td>
      <td>83.274201</td>
      <td>83.989488</td>
      <td>93.867718</td>
      <td>96.539641</td>
      <td>95.203679</td>
    </tr>
    <tr>
      <th>Wright High School</th>
      <td>Charter</td>
      <td>1800</td>
      <td>$1,049,400.00</td>
      <td>$583.00</td>
      <td>83.682222</td>
      <td>83.955000</td>
      <td>93.333333</td>
      <td>96.611111</td>
      <td>94.972222</td>
    </tr>
  </tbody>
</table>
</div>




```python
# Begin Top Performing Schools (By Passing Rate)
top_performing = school_summary_display.sort_values(['% Overall Passing Rate'],ascending=False)

if write_to_excel == 'y':
    writer = pd.ExcelWriter('top_performing.xlsx')
    top_performing.head(5).to_excel(writer,'Sheet1')

top_performing.head(5)
```




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>School Type</th>
      <th>Total Students</th>
      <th>Total School Budget</th>
      <th>Per Student Budget</th>
      <th>Average Math Score</th>
      <th>Average Reading Score</th>
      <th>% Passing Math</th>
      <th>% Passing Reading</th>
      <th>% Overall Passing Rate</th>
    </tr>
    <tr>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Cabrera High School</th>
      <td>Charter</td>
      <td>1858</td>
      <td>$1,081,356.00</td>
      <td>$582.00</td>
      <td>83.061895</td>
      <td>83.975780</td>
      <td>94.133477</td>
      <td>97.039828</td>
      <td>95.586652</td>
    </tr>
    <tr>
      <th>Thomas High School</th>
      <td>Charter</td>
      <td>1635</td>
      <td>$1,043,130.00</td>
      <td>$638.00</td>
      <td>83.418349</td>
      <td>83.848930</td>
      <td>93.272171</td>
      <td>97.308869</td>
      <td>95.290520</td>
    </tr>
    <tr>
      <th>Pena High School</th>
      <td>Charter</td>
      <td>962</td>
      <td>$585,858.00</td>
      <td>$609.00</td>
      <td>83.839917</td>
      <td>84.044699</td>
      <td>94.594595</td>
      <td>95.945946</td>
      <td>95.270270</td>
    </tr>
    <tr>
      <th>Griffin High School</th>
      <td>Charter</td>
      <td>1468</td>
      <td>$917,500.00</td>
      <td>$625.00</td>
      <td>83.351499</td>
      <td>83.816757</td>
      <td>93.392371</td>
      <td>97.138965</td>
      <td>95.265668</td>
    </tr>
    <tr>
      <th>Wilson High School</th>
      <td>Charter</td>
      <td>2283</td>
      <td>$1,319,574.00</td>
      <td>$578.00</td>
      <td>83.274201</td>
      <td>83.989488</td>
      <td>93.867718</td>
      <td>96.539641</td>
      <td>95.203679</td>
    </tr>
  </tbody>
</table>
</div>




```python
bottom_performing = school_summary_display.sort_values(['% Overall Passing Rate'],ascending=True)

if write_to_excel == 'y':
    writer = pd.ExcelWriter('bottom_performing.xlsx')
    bottom_performing.head(5).to_excel(writer,'Sheet1')

bottom_performing.head(5)
```




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>School Type</th>
      <th>Total Students</th>
      <th>Total School Budget</th>
      <th>Per Student Budget</th>
      <th>Average Math Score</th>
      <th>Average Reading Score</th>
      <th>% Passing Math</th>
      <th>% Passing Reading</th>
      <th>% Overall Passing Rate</th>
    </tr>
    <tr>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Rodriguez High School</th>
      <td>District</td>
      <td>3999</td>
      <td>$2,547,363.00</td>
      <td>$637.00</td>
      <td>76.842711</td>
      <td>80.744686</td>
      <td>66.366592</td>
      <td>80.220055</td>
      <td>73.293323</td>
    </tr>
    <tr>
      <th>Figueroa High School</th>
      <td>District</td>
      <td>2949</td>
      <td>$1,884,411.00</td>
      <td>$639.00</td>
      <td>76.711767</td>
      <td>81.158020</td>
      <td>65.988471</td>
      <td>80.739234</td>
      <td>73.363852</td>
    </tr>
    <tr>
      <th>Huang High School</th>
      <td>District</td>
      <td>2917</td>
      <td>$1,910,635.00</td>
      <td>$655.00</td>
      <td>76.629414</td>
      <td>81.182722</td>
      <td>65.683922</td>
      <td>81.316421</td>
      <td>73.500171</td>
    </tr>
    <tr>
      <th>Johnson High School</th>
      <td>District</td>
      <td>4761</td>
      <td>$3,094,650.00</td>
      <td>$650.00</td>
      <td>77.072464</td>
      <td>80.966394</td>
      <td>66.057551</td>
      <td>81.222432</td>
      <td>73.639992</td>
    </tr>
    <tr>
      <th>Ford High School</th>
      <td>District</td>
      <td>2739</td>
      <td>$1,763,916.00</td>
      <td>$644.00</td>
      <td>77.102592</td>
      <td>80.746258</td>
      <td>68.309602</td>
      <td>79.299014</td>
      <td>73.804308</td>
    </tr>
  </tbody>
</table>
</div>




```python
# Math Scores by Grade 

# For each grade create a Series containing average math score
grade_9_scores = student_data[student_data['grade'] == '9th'].groupby('school')['math_score'].mean()
grade_10_scores = student_data[student_data['grade'] == '10th'].groupby('school')['math_score'].mean()
grade_11_scores = student_data[student_data['grade'] == '11th'].groupby('school')['math_score'].mean()
grade_12_scores = student_data[student_data['grade'] == '12th'].groupby('school')['math_score'].mean()

# Create New Summary Data Frame
math_scores_by_grade = pd.DataFrame({
                                "9th":grade_9_scores,
                                "10th":grade_10_scores,
                                "11th":grade_11_scores,
                                "12th":grade_12_scores
                                })
# Reorder Columns in df since we want 9th to be first column
math_scores_by_grade = math_scores_by_grade[['9th', '10th', '11th', '12th']]

math_scores_by_grade.index.name=''

if write_to_excel == 'y':
    writer = pd.ExcelWriter('math_scores_by_grade.xlsx')
    math_scores_by_grade.to_excel(writer,'Sheet1')

math_scores_by_grade

```




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>9th</th>
      <th>10th</th>
      <th>11th</th>
      <th>12th</th>
    </tr>
    <tr>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Bailey High School</th>
      <td>77.083676</td>
      <td>76.996772</td>
      <td>77.515588</td>
      <td>76.492218</td>
    </tr>
    <tr>
      <th>Cabrera High School</th>
      <td>83.094697</td>
      <td>83.154506</td>
      <td>82.765560</td>
      <td>83.277487</td>
    </tr>
    <tr>
      <th>Figueroa High School</th>
      <td>76.403037</td>
      <td>76.539974</td>
      <td>76.884344</td>
      <td>77.151369</td>
    </tr>
    <tr>
      <th>Ford High School</th>
      <td>77.361345</td>
      <td>77.672316</td>
      <td>76.918058</td>
      <td>76.179963</td>
    </tr>
    <tr>
      <th>Griffin High School</th>
      <td>82.044010</td>
      <td>84.229064</td>
      <td>83.842105</td>
      <td>83.356164</td>
    </tr>
    <tr>
      <th>Hernandez High School</th>
      <td>77.438495</td>
      <td>77.337408</td>
      <td>77.136029</td>
      <td>77.186567</td>
    </tr>
    <tr>
      <th>Holden High School</th>
      <td>83.787402</td>
      <td>83.429825</td>
      <td>85.000000</td>
      <td>82.855422</td>
    </tr>
    <tr>
      <th>Huang High School</th>
      <td>77.027251</td>
      <td>75.908735</td>
      <td>76.446602</td>
      <td>77.225641</td>
    </tr>
    <tr>
      <th>Johnson High School</th>
      <td>77.187857</td>
      <td>76.691117</td>
      <td>77.491653</td>
      <td>76.863248</td>
    </tr>
    <tr>
      <th>Pena High School</th>
      <td>83.625455</td>
      <td>83.372000</td>
      <td>84.328125</td>
      <td>84.121547</td>
    </tr>
    <tr>
      <th>Rodriguez High School</th>
      <td>76.859966</td>
      <td>76.612500</td>
      <td>76.395626</td>
      <td>77.690748</td>
    </tr>
    <tr>
      <th>Shelton High School</th>
      <td>83.420755</td>
      <td>82.917411</td>
      <td>83.383495</td>
      <td>83.778976</td>
    </tr>
    <tr>
      <th>Thomas High School</th>
      <td>83.590022</td>
      <td>83.087886</td>
      <td>83.498795</td>
      <td>83.497041</td>
    </tr>
    <tr>
      <th>Wilson High School</th>
      <td>83.085578</td>
      <td>83.724422</td>
      <td>83.195326</td>
      <td>83.035794</td>
    </tr>
    <tr>
      <th>Wright High School</th>
      <td>83.264706</td>
      <td>84.010288</td>
      <td>83.836782</td>
      <td>83.644986</td>
    </tr>
  </tbody>
</table>
</div>




```python
# Reading Scores by Grade 

# For each grade create a Series containing average reading score
grade_9_scores = student_data[student_data['grade'] == '9th'].groupby('school')['reading_score'].mean()
grade_10_scores = student_data[student_data['grade'] == '10th'].groupby('school')['reading_score'].mean()
grade_11_scores = student_data[student_data['grade'] == '11th'].groupby('school')['reading_score'].mean()
grade_12_scores = student_data[student_data['grade'] == '12th'].groupby('school')['reading_score'].mean()

# Create New Summary Data Frame
reading_scores_by_grade = pd.DataFrame({
                                "9th":grade_9_scores,
                                "10th":grade_10_scores,
                                "11th":grade_11_scores,
                                "12th":grade_12_scores
                                })
# Reorder Columns in df since we want 9th to be first column
reading_scores_by_grade = reading_scores_by_grade[['9th', '10th', '11th', '12th']]

reading_scores_by_grade.index.name=''
 
if write_to_excel == 'y':
    writer = pd.ExcelWriter('reading_scores_by_grade.xlsx')
    reading_scores_by_grade.to_excel(writer,'Sheet1')
    
reading_scores_by_grade
```




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>9th</th>
      <th>10th</th>
      <th>11th</th>
      <th>12th</th>
    </tr>
    <tr>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Bailey High School</th>
      <td>81.303155</td>
      <td>80.907183</td>
      <td>80.945643</td>
      <td>80.912451</td>
    </tr>
    <tr>
      <th>Cabrera High School</th>
      <td>83.676136</td>
      <td>84.253219</td>
      <td>83.788382</td>
      <td>84.287958</td>
    </tr>
    <tr>
      <th>Figueroa High School</th>
      <td>81.198598</td>
      <td>81.408912</td>
      <td>80.640339</td>
      <td>81.384863</td>
    </tr>
    <tr>
      <th>Ford High School</th>
      <td>80.632653</td>
      <td>81.262712</td>
      <td>80.403642</td>
      <td>80.662338</td>
    </tr>
    <tr>
      <th>Griffin High School</th>
      <td>83.369193</td>
      <td>83.706897</td>
      <td>84.288089</td>
      <td>84.013699</td>
    </tr>
    <tr>
      <th>Hernandez High School</th>
      <td>80.866860</td>
      <td>80.660147</td>
      <td>81.396140</td>
      <td>80.857143</td>
    </tr>
    <tr>
      <th>Holden High School</th>
      <td>83.677165</td>
      <td>83.324561</td>
      <td>83.815534</td>
      <td>84.698795</td>
    </tr>
    <tr>
      <th>Huang High School</th>
      <td>81.290284</td>
      <td>81.512386</td>
      <td>81.417476</td>
      <td>80.305983</td>
    </tr>
    <tr>
      <th>Johnson High School</th>
      <td>81.260714</td>
      <td>80.773431</td>
      <td>80.616027</td>
      <td>81.227564</td>
    </tr>
    <tr>
      <th>Pena High School</th>
      <td>83.807273</td>
      <td>83.612000</td>
      <td>84.335938</td>
      <td>84.591160</td>
    </tr>
    <tr>
      <th>Rodriguez High School</th>
      <td>80.993127</td>
      <td>80.629808</td>
      <td>80.864811</td>
      <td>80.376426</td>
    </tr>
    <tr>
      <th>Shelton High School</th>
      <td>84.122642</td>
      <td>83.441964</td>
      <td>84.373786</td>
      <td>82.781671</td>
    </tr>
    <tr>
      <th>Thomas High School</th>
      <td>83.728850</td>
      <td>84.254157</td>
      <td>83.585542</td>
      <td>83.831361</td>
    </tr>
    <tr>
      <th>Wilson High School</th>
      <td>83.939778</td>
      <td>84.021452</td>
      <td>83.764608</td>
      <td>84.317673</td>
    </tr>
    <tr>
      <th>Wright High School</th>
      <td>83.833333</td>
      <td>83.812757</td>
      <td>84.156322</td>
      <td>84.073171</td>
    </tr>
  </tbody>
</table>
</div>




```python
# Spending Range Per Student

spending_range_display = schools_summary.rename(columns={'Math Score':'Average Math Score',
                                                  'Reading Score':'Average Reading Score'})
bins = [0, 580, 620, 640, 700] 
# Set up labels to compute when bins is updated
group_labels = ['<' + str(bins[1]-1), 
                str(bins[1]) + "-" + str(bins[2]-1), 
                str(bins[2]) + "-" + str(bins[3]-1),
                str(bins[3]) + "-" + str(bins[4])]
               
# Add new column with range information based values in Per Student Budget
spending_range_display['Spending Ranges (Per Student)'] = pd.cut(spending_range_display['Per Student Budget'],
                                                             bins, labels=group_labels)
# Get needed columns 
spending_range_display = spending_range_display[['Spending Ranges (Per Student)', 
                                                 'Average Math Score',
                                                 'Average Reading Score',
                                                 '% Passing Math',
                                                 '% Passing Reading',
                                                 '% Overall Passing Rate']]

# Roll up to the Grouped By Object (Spending Ranges)
spending_range_display = spending_range_display.groupby("Spending Ranges (Per Student)")

if write_to_excel == 'y':
    writer = pd.ExcelWriter('spending_range_per_student.xlsx')
    spending_range_display.max().to_excel(writer,'Sheet1')

# Show Final Spending Range Summary
spending_range_display.max()

```




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Average Math Score</th>
      <th>Average Reading Score</th>
      <th>% Passing Math</th>
      <th>% Passing Reading</th>
      <th>% Overall Passing Rate</th>
    </tr>
    <tr>
      <th>Spending Ranges (Per Student)</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>&lt;579</th>
      <td>83.274201</td>
      <td>83.989488</td>
      <td>93.867718</td>
      <td>96.539641</td>
      <td>95.203679</td>
    </tr>
    <tr>
      <th>580-619</th>
      <td>83.839917</td>
      <td>84.044699</td>
      <td>94.594595</td>
      <td>97.039828</td>
      <td>95.586652</td>
    </tr>
    <tr>
      <th>620-639</th>
      <td>83.418349</td>
      <td>83.848930</td>
      <td>93.392371</td>
      <td>97.308869</td>
      <td>95.290520</td>
    </tr>
    <tr>
      <th>640-700</th>
      <td>77.289752</td>
      <td>81.182722</td>
      <td>68.309602</td>
      <td>81.316421</td>
      <td>73.807983</td>
    </tr>
  </tbody>
</table>
</div>




```python
# School Size Ranges

size_range_display = schools_summary.rename(columns={'Math Score':'Average Math Score',
                                           'Reading Score':'Average Reading Score'})
bins = [0, 1000, 2000, 5000] 
# Set up labels to compute when bins is updated
group_labels = ['Small(<' + str(bins[1]-1) + ')', 
                'Medium (' + str(bins[1]) + "-" + str(bins[2]-1) + ')', 
                'Large (' + str(bins[2]) + "-" + str(bins[3]) + ')']

# Add new column with range information based values in Per Student Budget
size_range_display['School Size'] = pd.cut(size_range_display['size'], bins, labels=group_labels)

# Get needed columns 
size_range_display = size_range_display[['School Size', 
                                         'Average Math Score',
                                         'Average Reading Score',
                                         '% Passing Math',
                                         '% Passing Reading',
                                         '% Overall Passing Rate']]

# Roll up to the Grouped By Object (School Size)
size_range_display = size_range_display.groupby('School Size')

if write_to_excel == 'y':
    writer = pd.ExcelWriter('spending_range_per_size.xlsx')
    size_range_display.max().to_excel(writer,'Sheet1')
    
# Show Final Size Range Summary
size_range_display.max()

```




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Average Math Score</th>
      <th>Average Reading Score</th>
      <th>% Passing Math</th>
      <th>% Passing Reading</th>
      <th>% Overall Passing Rate</th>
    </tr>
    <tr>
      <th>School Size</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Small(&lt;999)</th>
      <td>83.839917</td>
      <td>84.044699</td>
      <td>94.594595</td>
      <td>96.252927</td>
      <td>95.270270</td>
    </tr>
    <tr>
      <th>Medium (1000-1999)</th>
      <td>83.682222</td>
      <td>83.975780</td>
      <td>94.133477</td>
      <td>97.308869</td>
      <td>95.586652</td>
    </tr>
    <tr>
      <th>Large (2000-5000)</th>
      <td>83.274201</td>
      <td>83.989488</td>
      <td>93.867718</td>
      <td>96.539641</td>
      <td>95.203679</td>
    </tr>
  </tbody>
</table>
</div>




```python
# School Type Range

type_range_display = schools_summary.rename(columns={'Math Score':'Average Math Score',
                                           'Reading Score':'Average Reading Score'})
bins = [0, 1, 2] 
# Set up labels to compute when bins is updated
group_labels = ['Charter', 'District']

# Add new column with range information based values in Per Student Budget
type_range_display['School Type'] = pd.cut(type_range_display['type#'], bins, labels=group_labels)

# Get needed columns 
type_range_display = type_range_display[['School Type', 
                                         'Average Math Score',
                                         'Average Reading Score',
                                         '% Passing Math',
                                         '% Passing Reading',
                                         '% Overall Passing Rate']]

# Roll up to the Grouped By Object (School Type)
type_range_display = type_range_display.groupby('School Type')

if write_to_excel == 'y':
    writer = pd.ExcelWriter('school_type_range.xlsx')
    type_range_display.max().to_excel(writer,'Sheet1')

# Show Final Spending Range Summary
type_range_display.max()

```




<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>Average Math Score</th>
      <th>Average Reading Score</th>
      <th>% Passing Math</th>
      <th>% Passing Reading</th>
      <th>% Overall Passing Rate</th>
    </tr>
    <tr>
      <th>School Type</th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Charter</th>
      <td>83.839917</td>
      <td>84.044699</td>
      <td>94.594595</td>
      <td>97.308869</td>
      <td>95.586652</td>
    </tr>
    <tr>
      <th>District</th>
      <td>77.289752</td>
      <td>81.182722</td>
      <td>68.309602</td>
      <td>81.933280</td>
      <td>74.306672</td>
    </tr>
  </tbody>
</table>
</div>


